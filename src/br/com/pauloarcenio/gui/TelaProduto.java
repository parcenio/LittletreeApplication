package br.com.pauloarcenio.gui;

import br.com.pauloarcenio.base.Base;
import br.com.pauloarcenio.dao.ProdutoDAO;
import br.com.pauloarcenio.entidades.Littletree;
import br.com.pauloarcenio.enums.TipoLittle;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;

public class TelaProduto extends javax.swing.JDialog {

    /**
     * Creates new form TelaProduto
     *
     * @param parent
     * @param modal
     */
    public TelaProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atualizaProdutos();
        popularComboTipoProdutos();
    }


    public final void atualizaProdutos() {
        String[] cposProdutos = {"ID", "Nome", "Tipo", "Valor", "Quantidade"};
        List<Littletree> littles = ProdutoDAO.selecionarTodos();
        String[][] dadosLittles;
        dadosLittles = new String[littles.size()][5];
        int posicao2 = 0;
        for (Littletree lit : littles) {
            String[] umLittle = new String[5];
            umLittle[0] = String.valueOf(lit.getId());
            umLittle[1] = lit.getNome();
            umLittle[2] = lit.getTipo().getNomeLittle();
            umLittle[3] = String.valueOf(lit.getValor());
            umLittle[4] = String.valueOf(lit.getQuantidade());
            dadosLittles[posicao2++] = umLittle;
        }
        DefaultTableModel modeloLittle = new DefaultTableModel(
                dadosLittles, cposProdutos);
        jtbProdutos.setModel(modeloLittle);
    }

    private void popularComboTipoProdutos() {
        jcTipoProduto.removeAllItems();
        for (TipoLittle tipo : TipoLittle.values()) {
            jcTipoProduto.addItem(tipo.getNomeLittle());
        }
    }

    private void popularComboProdutosInicio() {
        TelaInicio.jcProdutosEstoque.removeAllItems();
        List<Littletree> listaDeLittle = ProdutoDAO.selecionarTodos();
        for (Littletree lit : listaDeLittle) {
            TelaInicio.jcProdutosEstoque.addItem(lit.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbProdutos = new javax.swing.JTable();
        jtNomeProduto = new javax.swing.JTextField();
        jcTipoProduto = new javax.swing.JComboBox<>();
        jtValorProduto = new javax.swing.JTextField();
        jtQuantidadeProduto = new javax.swing.JTextField();
        jbAdicionarProduto = new javax.swing.JButton();
        jbAlterarProduto = new javax.swing.JButton();
        jbDeletarProduto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Produtos");
        setIconImage(new ImageIcon(this.getClass().getResource("/br/com/pauloarcenio/images/padraologo.png")).getImage());
        setMinimumSize(new java.awt.Dimension(600, 400));
        setResizable(false);

        jtbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbProdutos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtbProdutos.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        jtbProdutos.setShowHorizontalLines(true);
        jtbProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbProdutos);

        jtNomeProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jcTipoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcTipoProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jtValorProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jtValorProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtValorProdutoActionPerformed(evt);
            }
        });

        jtQuantidadeProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Qtde", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbAdicionarProduto.setText("Add");
        jbAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarProdutoActionPerformed(evt);
            }
        });

        jbAlterarProduto.setText("Alt");
        jbAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarProdutoActionPerformed(evt);
            }
        });

        jbDeletarProduto.setText("Del");
        jbDeletarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbAdicionarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbAlterarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbDeletarProduto)
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdicionarProduto)
                    .addComponent(jbAlterarProduto)
                    .addComponent(jbDeletarProduto))
                .addGap(34, 34, 34))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtValorProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtValorProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtValorProdutoActionPerformed

    private void jbAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarProdutoActionPerformed
        int selecionado = jtbProdutos.getSelectedRow();
        if (jtbProdutos.isRowSelected(selecionado)) {
            String idString = (String) jtbProdutos.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            Littletree little = (ProdutoDAO.getLittletreePorID(id));
            boolean retornoSenha = TelaInicio.senhaADM();
            if (retornoSenha) {
                String nome = jtNomeProduto.getText();
                String tipo = jcTipoProduto.getSelectedItem().toString();
                int valor = Integer.parseInt(jtValorProduto.getText());
                int quantidade = Integer.parseInt(jtQuantidadeProduto.getText());
                little.setNome(nome);
                little.setTipo(TipoLittle.getTipoPorNome(tipo));
                little.setValor(valor);
                little.setQuantidade(quantidade);
                ProdutoDAO.alterar(little);
                atualizaProdutos();
                popularComboProdutosInicio();
            } else {
                JOptionPane.showMessageDialog(null, "Senha Inválida!");
            }

        } else {
            Base.mensagem("Selecione um produto para alterar.");
        }
    }//GEN-LAST:event_jbAlterarProdutoActionPerformed

    private void jtbProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbProdutosMouseClicked
        int selecionado = jtbProdutos.getSelectedRow();
        String idString = (String) jtbProdutos.getValueAt(selecionado, 0);
        byte id = Byte.parseByte(idString);
        Littletree little = ProdutoDAO.getLittletreePorID(id);

        if (jtbProdutos.isRowSelected(selecionado)) {
            jtNomeProduto.setText(little.getNome());
            jcTipoProduto.setSelectedIndex(little.getTipo().ordinal());
            jtQuantidadeProduto.setText(String.valueOf(little.getQuantidade()));
            jtValorProduto.setText(String.valueOf(little.getValor()));
        }
    }//GEN-LAST:event_jtbProdutosMouseClicked

    private void jbAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarProdutoActionPerformed
        String nome = jtNomeProduto.getText();
        if (!ProdutoDAO.existeProduto(nome)) {
            TipoLittle tipo = TipoLittle.getTipoPorNome(jcTipoProduto.getSelectedItem().toString());
            int valor = Integer.parseInt(jtValorProduto.getText());
            int quantidade = Integer.parseInt(jtQuantidadeProduto.getText());
            Littletree littleNew = new Littletree(nome, tipo, valor, quantidade);
            ProdutoDAO.inserir(littleNew);
            atualizaProdutos();
            popularComboProdutosInicio();
        } else {
            Base.mensagem("Já existe esse produto!");
        }
    }//GEN-LAST:event_jbAdicionarProdutoActionPerformed

    private void jbDeletarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarProdutoActionPerformed
        int selecionado = jtbProdutos.getSelectedRow();

        if (jtbProdutos.isRowSelected(selecionado)) {
            boolean retornoSenha = TelaInicio.senhaADM();
            if (retornoSenha) {
                String idString = (String) jtbProdutos.getValueAt(selecionado, 0);
                byte id = Byte.parseByte(idString);
                ProdutoDAO.apagar(ProdutoDAO.getLittletreePorID(id));
                atualizaProdutos();
                popularComboProdutosInicio();
            } else {
                JOptionPane.showMessageDialog(null, "Senha Inválida!");
            }

        } else {
            Base.mensagem("Selecione um produto para apagar.");
        }
    }//GEN-LAST:event_jbDeletarProdutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            TelaProduto dialog = new TelaProduto(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JButton jbAdicionarProduto;
    javax.swing.JButton jbAlterarProduto;
    javax.swing.JButton jbDeletarProduto;
    javax.swing.JComboBox<String> jcTipoProduto;
    javax.swing.JTextField jtNomeProduto;
    javax.swing.JTextField jtQuantidadeProduto;
    javax.swing.JTextField jtValorProduto;
    public static javax.swing.JTable jtbProdutos;
    // End of variables declaration//GEN-END:variables
}
