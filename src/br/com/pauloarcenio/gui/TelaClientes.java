
package br.com.pauloarcenio.gui;

import br.com.pauloarcenio.base.Base;
import br.com.pauloarcenio.dao.ClienteDAO;
import br.com.pauloarcenio.entidades.Cliente;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;


public class TelaClientes extends javax.swing.JDialog {


    /**
     * Creates new form TelaClientes
     * @param parent
     * @param modal
     */
    public TelaClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atualizaClientes();
    }

    public final void atualizaClientes() {
        String[] cposClientes = {"ID", "Nome", "Contato.", "Vendas"};
        List<Cliente> clientes = ClienteDAO.selecionarTodos();
        String[][] dadosClientes;
        dadosClientes = new String[clientes.size()][4];
        int posicao = 0;
        for (Cliente cli : clientes) {
            String[] umCliente = new String[4];
            umCliente[0] = String.valueOf(cli.getId());
            umCliente[1] = cli.getNome();
            umCliente[2] = cli.getContato();
            umCliente[3] = String.valueOf(cli.getVendas());
            dadosClientes[posicao++] = umCliente;
        }
        DefaultTableModel modeloCli = new DefaultTableModel(
                dadosClientes, cposClientes);

        jtbClientes.setModel(modeloCli);
    }

    public final void atualizaClientesInicio() {
        String[] cposClientes = {"ID", "Nome", "Vendas"};
        List<Cliente> clientes = ClienteDAO.selecionarTodos();
        String[][] dadosClientes;
        dadosClientes = new String[clientes.size()][3];
        int posicao = 0;
        for (Cliente cli : clientes) {
            String[] umCliente = new String[3];
            umCliente[0] = String.valueOf(cli.getId());
            umCliente[1] = cli.getNome();
            umCliente[2] = String.valueOf(cli.getVendas());
            dadosClientes[posicao++] = umCliente;
        }
        DefaultTableModel modeloCliInicio = new DefaultTableModel(
                dadosClientes, cposClientes);
        TelaInicio.jtbClientes1.setModel(modeloCliInicio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbClientes = new javax.swing.JTable();
        jtClienteNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtContatoCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbCadastrarCliente = new javax.swing.JButton();
        jbAlterarCliente = new javax.swing.JButton();
        jbRemoverCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Clientes");
        setIconImage(new ImageIcon(this.getClass().getResource("/br/com/pauloarcenio/images/padraologo.png")).getImage());
        setMinimumSize(new java.awt.Dimension(600, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jtbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbClientes);

        jLabel1.setText("Nome:");

        jLabel2.setText("Contato:");

        jbCadastrarCliente.setText("Cadastrar");
        jbCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarClienteActionPerformed(evt);
            }
        });

        jbAlterarCliente.setText("Alterar");
        jbAlterarCliente.setMaximumSize(new java.awt.Dimension(80, 22));
        jbAlterarCliente.setMinimumSize(new java.awt.Dimension(80, 22));
        jbAlterarCliente.setPreferredSize(new java.awt.Dimension(80, 22));
        jbAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarClienteActionPerformed(evt);
            }
        });

        jbRemoverCliente.setText("Remover");
        jbRemoverCliente.setMaximumSize(new java.awt.Dimension(80, 22));
        jbRemoverCliente.setMinimumSize(new java.awt.Dimension(80, 22));
        jbRemoverCliente.setPreferredSize(new java.awt.Dimension(80, 22));
        jbRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbCadastrarCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCadastrarCliente)
                    .addComponent(jbAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtbClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbClientesMouseClicked
        int selecionado = jtbClientes.getSelectedRow();
        if (jtbClientes.isRowSelected(selecionado)) {
            String idString = (String) jtbClientes.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            Cliente cliente = ClienteDAO.getClientePorID(id);

            jtClienteNome.setText(cliente.getNome());
            jtContatoCliente.setText(cliente.getContato());

        }
    }//GEN-LAST:event_jtbClientesMouseClicked

    private void jbCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarClienteActionPerformed
        String nome = jtClienteNome.getText();
        String contato = jtContatoCliente.getText();
        boolean existe = ClienteDAO.existeCliente(nome, contato);
        if (existe) {
            JOptionPane.showMessageDialog(null, "Já existe esse cliente!");
        } else {
            Cliente cliente = new Cliente(nome, contato);
            ClienteDAO.inserir(cliente);
            atualizaClientes();
            atualizaClientesInicio();
        }
        jtClienteNome.setText("");
        jtContatoCliente.setText("");
    }//GEN-LAST:event_jbCadastrarClienteActionPerformed

    private void jbAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarClienteActionPerformed
        int selecionado = jtbClientes.getSelectedRow();
        if (jtbClientes.isRowSelected(selecionado)) {
            String idString = (String) jtbClientes.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            Cliente cliente = (ClienteDAO.getClientePorID(id));

            String nome = jtClienteNome.getText();
            String contato = jtContatoCliente.getText();
            if (!nome.isEmpty() && !contato.isEmpty()) {
                cliente.setNome(nome);
                cliente.setContato(contato);
                ClienteDAO.alterar(cliente);
                atualizaClientes();
                atualizaClientesInicio();

            } else {
                Base.mensagem("Insira os dados para alterar!");
            }
        } else {
            Base.mensagem("Selecione um cliente para alterar.");
        }
        jtClienteNome.setText("");
        jtContatoCliente.setText("");
    }//GEN-LAST:event_jbAlterarClienteActionPerformed

    private void jbRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverClienteActionPerformed
        int selecionado = jtbClientes.getSelectedRow();
        if (jtbClientes.isRowSelected(selecionado)) {
            String idString = (String) jtbClientes.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            ClienteDAO.apagar(ClienteDAO.getClientePorID(id));
            atualizaClientes();
            atualizaClientesInicio();

        } else {
            Base.mensagem("Selecione um cliente para apagar.");
        }
        jtClienteNome.setText("");
        jtContatoCliente.setText("");
    }//GEN-LAST:event_jbRemoverClienteActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            TelaClientes dialog = new TelaClientes(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterarCliente;
    private javax.swing.JButton jbCadastrarCliente;
    private javax.swing.JButton jbRemoverCliente;
    private javax.swing.JTextField jtClienteNome;
    private javax.swing.JTextField jtContatoCliente;
    private javax.swing.JTable jtbClientes;
    // End of variables declaration//GEN-END:variables
}
